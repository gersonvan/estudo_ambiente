name: CD Homolog

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/app-exemplo

jobs:
  deploy-homolog:
    runs-on: ubuntu-latest
    steps:
      - name: Set IMAGE_TAG from latest commit
        id: vars
        run: echo "IMAGE_TAG=main-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: SSH deploy to homolog host
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.HOMOLOG_HOST }}
          username: ${{ secrets.HOMOLOG_USER }}
          key: ${{ secrets.HOMOLOG_SSH_KEY }}
          script: |
            export IMAGE_TAG=${{ steps.vars.outputs.IMAGE_TAG }}
            mkdir -p ~/novo-ambiente-homolog
            cd ~/novo-ambiente-homolog

            # criar/atualizar compose de homolog (primeira vez copie do repositório ou mantenha um arquivo versão-controlada no host)
            cat > compose-homolog.yml << 'EOF'
            services:
              app-homolog:
                image: ghcr.io/${{ github.repository }}/app-exemplo:${IMAGE_TAG}
                env_file: ./env/homolog.env
                ports:
                  - "3002:3000"
                healthcheck:
                  test: ["CMD", "node", "-e", "fetch('http://localhost:3000/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"]
                  interval: 10s
                  timeout: 3s
                  retries: 5
                restart: unless-stopped
            EOF

            mkdir -p env
            # env/homolog.env deve existir no host; se preferir, injete via secrets/SSM/cofre
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose -f compose-homolog.yml pull
            docker compose -f compose-homolog.yml up -d --remove-orphans
            docker compose -f compose-homolog.yml ps
