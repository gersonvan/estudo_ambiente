name: CD Prod

on:
  push:
    tags:
      - '20*.**.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/app-exemplo

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    steps:
      - name: Set IMAGE_TAG from tag
        id: vars
        run: echo "IMAGE_TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: SSH deploy to prod host
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            export IMAGE_TAG=${{ steps.vars.outputs.IMAGE_TAG }}

            mkdir -p ~/novo-ambiente-prod
            cd ~/novo-ambiente-prod

            cat > compose-prod.yml << 'EOF'
            services:
              app-prod:
                image: ghcr.io/${{ github.repository }}/app-exemplo:${IMAGE_TAG}
                env_file: ./env/prod.env
                ports:
                  - "3003:3000"
                healthcheck:
                  test: ["CMD", "node", "-e", "fetch('http://localhost:3000/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))"]
                  interval: 10s
                  timeout: 3s
                  retries: 5
                restart: unless-stopped
            EOF

            mkdir -p env
            # env/prod.env deve existir e ser gerenciado com seguran√ßa (cofre/secrets manager)
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose -f compose-prod.yml pull
            docker compose -f compose-prod.yml up -d --remove-orphans
            docker compose -f compose-prod.yml ps
